name: Dependency Management and Vulnerability Scanning

on:
  # Trigger workflow met pull request
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  

  schedule:
    - cron: "0 0 * * 0"  # wekelijkse scan uitvoeren op zondag

jobs:
  sast_scan:
    name: Run Bandit Scan (SAST)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit Scan
        run: bandit -ll -ii -r . -f json -o bandit-report.json
        continue-on-error: true

      - name: Upload Bandit Scan Artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bandit-findings
          path: bandit-report.json
      
      - name: Display Bandit Report
        run: |
          if [ -f bandit-report.json ]; then
            echo "Displaying Bandit Report:"
            cat bandit-report.json
          else
            echo "Bandit report not found."
          fi

      - name: Check if Bandit found vulnerabilities
        run: |
          if grep -q '"issue_severity": "HIGH"' bandit-report.json; then
            echo "High severity vulnerabilities detected!"
            exit 1
          elif grep -q '"issue_severity": "MEDIUM"' bandit-report.json; then
            echo "Medium severity vulnerabilities detected!"
            cat safety-report.txt
            exit 1
          else
            echo "No vulnerabilities found by Bandit."
          fi
          
    
  safety_scan:
    name: Run Safety Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety

      - name: Run Safety Scan
        run: safety check -r requirements.txt --output text > safety-report.txt || exit 1
        continue-on-error: true

      - name: Debug Safety Report existence
        if: always()
        run: |
          if [ -f safety-report.txt ]; then
            echo "Safety report exists. Contents:"
            cat safety-report.txt
          else
            echo "Safety report not found."
          fi
          
      - name: fail if vulnerabuility found
        if: always()
        run: |
          echo "Debugging safety-report.txt"
          cat safety-report.txt
          echo "Script execution begins"
          if grep -q "vulnerable" safety-report.txt; then
            echo "Condition matched: Vulnerabilities found"
            exit 1
          else
            echo "Condition not matched: No vulnerabilities"
          fi

      - name: Upload Safety Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: safety-report
          path: safety-report.txt
     
  trufflehog_scan:
    name: Run TruffleHog Scan for Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog Scan
        id: trufflehog
        uses: edplato/trufflehog-actions-scan@master
        with:
          scanArguments: "--regex --entropy=False --max_depth=50"
        continue-on-error: true

      - name: Check TruffleHog Results
        run: |
          if [[ "${{ steps.trufflehog.outcome }}" == "failure" ]]; then
            echo "Secrets detected by TruffleHog!"
            exit 1
          else
            echo "No secrets found by TruffleHog."
          fi
