name: Dependency Management and Vulnerability Scanning

on:
  # Trigger this workflow on a push to the main branch and for pull requests
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  
  # Schedule weekly scans
  schedule:
    - cron: "0 0 * * 0"  # Weekly schedule for automated security checks

jobs:
  sast_scan:
    name: Run Bandit Scan (SAST)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit Scan
        run: bandit -ll -ii -r . -f json -o bandit-report.json
        continue-on-error: true

      - name: Upload Bandit Scan Artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bandit-findings
          path: bandit-report.json

      - name: Check if Bandit found vulnerabilities
        run: |
          if grep -q '"issue_severity": "HIGH"' bandit-report.json; then
            echo "High severity vulnerabilities detected!"
            exit 1
          elif grep -q '"issue_severity": "MEDIUM"' bandit-report.json; then
            echo "Medium severity vulnerabilities detected!"
            exit 1
          else
            echo "No vulnerabilities found by Bandit."
          fi

  trufflehog_scan:
    name: Run TruffleHog Scan for Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}  # Necessary for pull request workflow trigger

      - name: Run TruffleHog Scan for Secrets
        uses: edplato/trufflehog-actions-scan@master
        continue-on-error: false

      - name: Check TruffleHog Scan Results
        if: ${{ steps.trufflehog.outcome == 'failure' }}
        run: exit 1

  snyk_scan:
    name: Run Snyk Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Run Snyk to Check for Vulnerabilities
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
